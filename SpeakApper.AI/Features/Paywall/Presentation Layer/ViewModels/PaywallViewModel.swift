//
//  PaywallViewModel.swift
//  SpeakApper.AI
//
//  Created by Akmaral Ergesh on 15.02.2025.
//

import Foundation
import StoreKit
import SwiftUI

@MainActor
class PaywallViewModel: ObservableObject {
    @Published var availableProducts: [Product] = []
    @Published var isPurchasing: Bool = false
    @Published var errorMessage: String?

    private let subscriptionManager: SubscriptionManager

    init(subscriptionManager: SubscriptionManager = .shared) {
        self.subscriptionManager = subscriptionManager
    }

    func loadProducts() async {
        do {
            try await subscriptionManager.loadProducts()
            self.availableProducts = subscriptionManager.products

            // –û—á–∏—â–∞–µ–º –º–∞–ø—É –∏ –æ–ø—Ü–∏–∏
            self.subscritpionMap = [:]
            self.SubscriptionOptions = []

            // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–∞–ø—É, –≥—Ä—É–ø–ø–∏—Ä—É—è –ø–æ —Ç–∏–ø—É
            for product in subscriptionManager.products {
                _ = makeSubscriptionOption(from: product)
            }

            // –¢–µ–ø–µ—Ä—å –ø—Ä–æ—Å—Ç–æ –±–µ—Ä–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
            self.SubscriptionOptions = Array(subscritpionMap.values)
            
        } catch {
            self.errorMessage = "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏"
        }
    }


    func purchase(option: SubscriptionOption, isTrial: Bool ) {
        Task {
            do {
                isPurchasing = true
                print("trial: \(isTrial)")
                guard let product = isTrial ? option.underlyingProducts.getTrialProduct() : option.underlyingProducts.getNonTrialProduct() else {
                    throw NilProductsInCase.fail
                }
                try await subscriptionManager.purchase(product)
            } catch {
                errorMessage = "–ü–æ–∫—É–ø–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
            }
            isPurchasing = false
        }
    }

    private func makeSubscriptionOption(from product: Product) -> SubscriptionOption? {
        guard let type = ProductType(id: product.id) else { return nil }

        let isTrialEnabled = product.subscription?.introductoryOffer?.paymentMode == .freeTrial
        let currencyCode = product.priceFormatStyle.currencyCode
        let wrappedProduct = WrappedProduct(isTrialEnabled: isTrialEnabled, underlyingProduct: product)

        if var existing = subscritpionMap[type] {
            // CASE 2 ‚Äî —É–∂–µ –±—ã–ª —ç—Ç–æ—Ç —Ç–∏–ø
            existing.underlyingProducts.append(wrappedProduct)
            if existing.underlyingProducts.getTrialProduct() != nil {
                existing.isTrialEnabled = true
            }

            subscritpionMap[type] = existing
            return existing
        } else {
            // CASE 1 ‚Äî –ø–µ—Ä–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç —Ç–∞–∫–æ–≥–æ —Ç–∏–ø–∞
            let option = SubscriptionOption(
                title: type.title,
                subtitle: type.formattedSubtitle(totalPrice: product.price, currencyCode: currencyCode),
                price: type.formattedTotalPrice(totalPrice: product.price, currencyCode: currencyCode),
                isBestValue: type.isBestValue,
                isTrialEnabled: isTrialEnabled,
                underlyingProducts: [wrappedProduct]
            )
            subscritpionMap[type] = option
            return option
        }
    }


    //           SubscriptionOption(
    //               title: "–ì–æ–¥–æ–≤–æ–π –ø–ª–∞–Ω", subtitle: "–≤—Å–µ–≥–æ 2 082 kzt –≤ –º–µ—Å—è—Ü",
    //               price: "24 990 kzt –≤ –≥–æ–¥", isBestValue: true),
    //           SubscriptionOption(
    //               title: "3 –¥–Ω—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ", subtitle: "–∑–∞—Ç–µ–º 6 990 kzt –≤ –º–µ—Å—è—Ü",
    //               price: "", isBestValue: false),
    //       ]

    @Published var paywallSlides: [PaywallSlide] = [
        PaywallSlide(
            features: [
                PaywallFeature(
                    icon: "mic.fill", text: "–ú–∞–∫—Å–∏–º—É–º 100 –º–∏–Ω—É—Ç –∑–∞ –∑–∞–ø–∏—Å—å"),
                PaywallFeature(
                    icon: "folder.fill", text: "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –∑–∞–ø–∏—Å–µ–π"),
                PaywallFeature(
                    icon: "wand.and.stars",
                    text: "AI-—Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞"),
                PaywallFeature(icon: "globe", text: "–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ 20+ —è–∑—ã–∫–æ–≤"),
                PaywallFeature(
                    icon: "square.and.arrow.down",
                    text: "–ò–º–ø–æ—Ä—Ç –∏ —ç–∫—Å–ø–æ—Ä—Ç –∑–∞–ø–∏—Å–µ–π"),
            ], review: nil),

        PaywallSlide(
            features: [
                PaywallFeature(
                    icon: "mic.fill", text: "–ú–∞–∫—Å–∏–º—É–º 100 –º–∏–Ω—É—Ç –∑–∞ –∑–∞–ø–∏—Å—å"),
                PaywallFeature(
                    icon: "folder.fill", text: "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –∑–∞–ø–∏—Å–µ–π"),
                PaywallFeature(
                    icon: "wand.and.stars",
                    text: "AI-—Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞"),
                PaywallFeature(icon: "globe", text: "–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ 20+ —è–∑—ã–∫–æ–≤"),
                PaywallFeature(
                    icon: "square.and.arrow.down",
                    text: "–ò–º–ø–æ—Ä—Ç –∏ —ç–∫—Å–ø–æ—Ä—Ç –∑–∞–ø–∏—Å–µ–π"),
            ], review: nil),

        PaywallSlide(
            features: [
                PaywallFeature(
                    icon: "captions.bubble.fill",
                    text: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—É–±—Ç–∏—Ç—Ä—ã"),
                PaywallFeature(
                    icon: "bubble.left.and.bubble.right.fill",
                    text: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤"),
                PaywallFeature(
                    icon: "textformat.abc", text: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏"),
                PaywallFeature(
                    icon: "clock.arrow.circlepath", text: "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏"),
            ], review: nil),

        PaywallSlide(
            features: nil,
            review:
                PaywallReview(
                    username: "marlmyn", rating: 5,
                    reviewText:
                        "SpeakApper ‚Äì —ç—Ç–æ –æ—Ç–ª–∏—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —á–∞—Å—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∞—É–¥–∏–æ –∏ —Ö–æ—á–µ—Ç –±—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏. üöÄüî•"
                )
        ),
    ]
    
    var subscritpionMap: [ProductType : SubscriptionOption] = [:]
    @Published var SubscriptionOptions: [SubscriptionOption] = []
}
